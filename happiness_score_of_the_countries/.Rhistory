knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(lubridate)
library(VIM)
library(stringr)
library(psych)
library(gsubfn)
library(stringi)
# Carregar el fitxer de dades en R
mydata <- read.csv2(file = "2016_raw.csv", header = TRUE, sep = ",", quote = "\"", dec = ".", fill = TRUE, encoding="UTF-8")
n.var <- names(mydata)
# breu resumen dels atributs
kable(head(mydata, n=5))
defineAtribute <- function(atribute) {
textSplited <- strsplit(atribute, "[.]")[[1]]
if (1 < length(textSplited)) {
atributeFinal <- ""
for (item in textSplited) {
atributeFinal <-
paste(atributeFinal, toupper(substr(item, 1, 1)), sep = "")
}
atributeFinal
} else {
atribute
}
}
iterator <- 1
for (item in names(mydata)) {
names(mydata)[iterator] <- print(defineAtribute(item))
iterator <- iterator + 1
}
kable(names(mydata))
toString(names(mydata))
kable(data.frame(variables= n.var[c(4,7)], clase= c("numeric", "numeric")))
res <- sapply(mydata,class)
kable(data.frame(variables=names(res),clase=as.vector(res)))
toString(data.frame(variables=names(res),clase=as.vector(res)))
# Passa tot a . decimal que entán R
# quan es guardi com a csv2 quedarà com , decimal
mydata$HS <- as.numeric(sub(",", "\\.", mydata$HS))
mydata$LCI <- as.numeric(sub(",", "\\.", mydata$LCI))
mydata$UCI <- as.numeric(sub(",", "\\.", mydata$UCI))
mydata$GPC <- as.numeric(sub(",", "\\.", mydata$GPC))
mydata$Family <- as.numeric(sub(",", "\\.", mydata$Family))
mydata$LE <- as.numeric(sub(",", "\\.", mydata$LE))
mydata$Freedom <- as.numeric(sub(",", "\\.", mydata$Freedom))
mydata$GC <-  as.numeric(sub(",", "\\.", mydata$GC))
mydata$Generosity <- as.numeric(sub(",", "\\.", mydata$Generosity))
mydata$DR <- as.numeric(sub(",", "\\.", mydata$DR))
summary(mydata)
kable(head(mydata, n = 5))
# Treure espai abans i després
mydata$Country <- trimws(mydata$Country)
mydata$Region <- trimws(mydata$Region)
simpleCap <- function(x) {
split_words <- strsplit(x, " ", fixed = TRUE)
v <- c()
for (word in split_words) {
word = trimws(word)
if (!is.null(word) && word != "") {
v <- sapply(str_to_lower(word), upper_word)
}
}
v =  v [!v == '']
paste(v,  collapse = ' ')
}
upper_word <- function(x) {
if (x != 'and')
return(str_to_title(str_to_lower(x)))
else
return(str_to_lower(x))
}
mydata$Country = sapply(mydata$Country, simpleCap)
mydata$Region = sapply(mydata$Region, simpleCap)
kable(head(mydata$Country, n = 10))
kable(table(mydata$Region))
fixed_mistakes <- function(x) {
word_with_mistake <- list('Afrca' = 'Africa')
word_change <- function(word) {
if (!is.null(word_with_mistake[[word]])) {
word_with_mistake[[word]]
} else{
word
}
}
split_words <- strsplit(x, " ", fixed = TRUE)
v <- c()
for (word in split_words) {
word = trimws(word)
if (!is.null(word) && word != "") {
v <- sapply(stri_encode(word), word_change)
}
}
v =  v [!v == '']
paste(v,  collapse = ' ')
}
mydata$Region = sapply(mydata$Region, fixed_mistakes)
kable(table(mydata$Region))
print(table(mydata$Region))
indices <- which(mydata$LCI >  mydata$UCI)
tmp <- mydata[indices, ]$UCI
mydata[indices, ]$UCI <- mydata[indices, ]$LCI
mydata[indices, ]$LCI <- tmp
head(mydata[, 5:6])
#Ordenamos
mydata <- mydata[order(mydata[, "HS"], decreasing = T), ]
#renombramos
iterator <- 1
for (item in mydata$HR) {
mydata$HR[iterator] <- iterator
iterator <- iterator + 1
}
head(mydata[, 3:4])
n=12 #colors
par(mfrow=c(2,2))
boxplot(mydata[,3], main=names(mydata)[3], col=topo.colors(n))
boxplot(mydata[,4], main=names(mydata)[4], col=topo.colors(n))
boxplot(mydata[,5], main=names(mydata)[5], col=topo.colors(n))
boxplot(mydata[,6], main=names(mydata)[6], col=topo.colors(n))
boxplot(mydata[,7], main=names(mydata)[7], col=topo.colors(n))
boxplot(mydata[,8], main=names(mydata)[8], col=topo.colors(n))
boxplot(mydata[,9], main=names(mydata)[9], col=topo.colors(n))
boxplot(mydata[,10], main=names(mydata)[10], col=topo.colors(n))
boxplot(mydata[,11], main=names(mydata)[11], col=topo.colors(n))
boxplot(mydata[,12], main=names(mydata)[12], col=topo.colors(n))
boxplot(mydata[,13], main=names(mydata)[13], col=topo.colors(n))
mean.n <- as.vector(sapply(mydata[, 3:13], mean, na.rm = TRUE))
std.n <- as.vector(sapply(mydata[, 3:13], sd, na.rm = TRUE))
median.n <- as.vector(sapply(mydata[, 3:13], median, na.rm = TRUE))
mean.trim.0.05 <-
as.vector(sapply(mydata[, 3:13], mean, na.rm = TRUE, trim = 0.05))
mean.winsor.0.05 <-
as.vector(sapply(mydata[, 3:13], winsor.mean, na.rm = TRUE, trim = 0.05))
IQR.n <- as.vector(sapply(mydata[, 3:13], IQR, na.rm = TRUE))
mad.n <- as.vector(sapply(mydata[, 3:13], mad, na.rm = TRUE))
kable(
data.frame(
variables = names(mydata)[3:13],
Media = mean.n,
Mediana = median.n,
Media.recort.0.05 = mean.trim.0.05,
Media.winsor.0.05 = mean.winsor.0.05
),
digits = 2,
caption = "Estimaciones de Tendencia Central"
)
kable(
data.frame(
variables = names(mydata)[3:13],
Desv.Standard = std.n,
IQR = IQR.n,
MAD = mad.n
),
digits = 2,
caption = "Estimaciones de Dispersio"
)
v.p <-names(mydata)[!complete.cases(t(mydata))]
v.p
# Family
v.p.p <- which(names(mydata)==v.p)
v.p.p
mydata.complet <- kNN(mydata[,8:13])
mydata[3,"Family"] <- mydata.complet[3,"Family"]
mydata[7:8,"Family"] <- mydata.complet[7:8,"Family"]
options(knitr.kable.NA = '')
kable(summary(mydata)[,c(1,2)],
digits=2, caption="Estadística descriptiva de variables qualitatives nominals")
library(plotrix)
labelsTable <- paste(names(mydata$Region), "\n", mydata$Region, sep="")
pie(table(factor(mydata$Region)),  labels = labelsTable, main="Despcripció atribut Regio", col=topo.colors(n))
kable(summary(mydata)[,c(3)],
digits=2, caption="Estadística descriptiva de variables quantitativas discretes")
#TOP 5 mes infeliços
head(mydata[order(mydata[, "HR"], decreasing = F), ][,c(1,3)], n=5)
#TOP 5mes feliços
head(mydata[order(mydata[, "HR"], decreasing = T), ][,c(1,3)], n=5)
kable(summary(mydata)[,c(4,5,6,7,8,9,10,11,12,13)],
digits=2, caption="Estadística descriptiva de variables quantitativas contínues")
barplot(mydata$HS, col=terrain.colors(n))
title(main = "HS", font.main = 4)
barplot(mydata$LCI, col=terrain.colors(n))
title(main = "LCI", font.main = 4)
barplot(mydata$UCI, col=terrain.colors(n))
title(main = "UCI", font.main = 4)
barplot(mydata$GPC, col=terrain.colors(n))
title(main = "GPC", font.main = 4)
barplot(mydata$Family, col=terrain.colors(n))
title(main = "Family", font.main = 4)
barplot(mydata$LE, col=terrain.colors(n))
title(main = "LE", font.main = 4)
barplot(mydata$Freedom, col=terrain.colors(n))
title(main = "Freedom", font.main = 4)
barplot(mydata$GC,col=terrain.colors(n))
title(main = "GC", font.main = 4)
barplot(mydata$Generosity, col=terrain.colors(n))
title(main = "Generosity", font.main = 4)
barplot(mydata$DR, col=terrain.colors(n))
title(main = "DR", font.main = 4)
write.csv2(mydata, file="2016_data_procesed.csv", row.names = FALSE)
